Homework #3
Your name:Pourna Sengupta


---------------------------------------- Question 1 Query ---------------------------------------- 

SELECT COUNT(*) 
FROM film 
WHERE rental_rate=4.99;

---------------------------------------- Question 1 Results ---------------------------------------- 					

count 
-------
   336
(1 row)

---------------------------------------- Question 2 Query ---------------------------------------- 

SELECT * FROM customer 
WHERE active=0 
ORDER BY first_name;

---------------------------------------- Question 2 Results ---------------------------------------- 					

customer_id | store_id | first_name | last_name |                email                | address_id | activebool | create_date |      last_update       | active 
-------------+----------+------------+-----------+-------------------------------------+------------+------------+-------------+------------------------+--------
         510 |        2 | BEN        | EASTER    | BEN.EASTER@sakilacustomer.org       |        515 | t          | 2017-02-14  | 2017-02-15 09:57:20-07 |      0
         534 |        1 | CHRISTIAN  | JUNG      | CHRISTIAN.JUNG@sakilacustomer.org   |        540 | t          | 2017-02-14  | 2017-02-15 09:57:20-07 |      0
         169 |        2 | ERICA      | MATTHEWS  | ERICA.MATTHEWS@sakilacustomer.org   |        173 | t          | 2017-02-14  | 2017-02-15 09:57:20-07 |      0
         368 |        1 | HARRY      | ARCE      | HARRY.ARCE@sakilacustomer.org       |        373 | t          | 2017-02-14  | 2017-02-15 09:57:20-07 |      0
         241 |        2 | HEIDI      | LARSON    | HEIDI.LARSON@sakilacustomer.org     |        245 | t          | 2017-02-14  | 2017-02-15 09:57:20-07 |      0
         558 |        1 | JIMMIE     | EGGLESTON | JIMMIE.EGGLESTON@sakilacustomer.org |        564 | t          | 2017-02-14  | 2017-02-15 09:57:20-07 |      0
          64 |        2 | JUDITH     | COX       | JUDITH.COX@sakilacustomer.org       |         68 | t          | 2017-02-14  | 2017-02-15 09:57:20-07 |      0
         315 |        2 | KENNETH    | GOODEN    | KENNETH.GOODEN@sakilacustome:

---------------------------------------- Question 3 Query ---------------------------------------- 

SELECT payment_id,amount,payment_date 
FROM payment 
WHERE amount = (SELECT MAX(amount) 
		FROM payment); 								

---------------------------------------- Question 3 Results ---------------------------------------- 					

payment_id  | amount |         payment_date          
------------+--------+-------------------------------
      17055 |  11.99 | 2017-01-25 16:46:45.996577-07
      17354 |  11.99 | 2017-02-17 22:19:47.996577-07
      20403 |  11.99 | 2017-03-21 21:57:24.996577-06
      22650 |  11.99 | 2017-03-22 22:17:22.996577-06
      23757 |  11.99 | 2017-03-21 22:02:26.996577-06
      24553 |  11.99 | 2017-03-23 20:47:59.996577-06
      24866 |  11.99 | 2017-03-02 20:46:39.996577-07
      28799 |  11.99 | 2017-04-07 19:14:17.996577-06
      28814 |  11.99 | 2017-04-06 21:26:57.996577-06
      29136 |  11.99 | 2017-04-29 21:06:07.996577-06
(10 rows)


---------------------------------------- Question 4 Query ---------------------------------------- 

SELECT COUNT(*) 
FROM film 
WHERE language_id = (SELECT language_id 
			FROM language 
			WHERE name = 'English'); 
SELECT count(*) 
FROM film 
INNER JOIN language ON film.language_id=language.language_id;

---------------------------------------- Question 4 Results ---------------------------------------- 			

count 
-------
  1000
(1 row)	

---------------------------------------- Question 5 Query ---------------------------------------- 

SELECT MAX(count) 
FROM 
	(SELECT count(film_id), film_id 
	FROM inventory group BY film_id) AS results;

---------------------------------------- Question 5 Results ---------------------------------------- 			

max 
-----
   8
(1 row)

---------------------------------------- Question 6 Query ---------------------------------------- 

SELECT customer.customer_id, SUM(amount) 
FROM customer, payment 
WHERE payment.customer_id=customer.customer_id
AND customer.customer_id>500 
GROUP BY customer.customer_id;

---------------------------------------- Question 6 Results ---------------------------------------- 					

customer_id |  sum   
-------------+--------
         574 | 109.72
         546 | 107.74
         562 | 109.75
         550 | 159.68
         559 | 110.72
         552 |  90.79
         539 |  90.78
         511 |  99.76
         571 | 121.76
         554 | 101.78
         516 |  98.74
         542 |  94.82
         514 |  74.78
         582 | 113.75
         537 | 103.75
         558 | 135.72
         540 | 112.76
         576 | 139.66
         598 |  83.78
         513 | 148.69
         526 | 221.55
         541 | 108.76
         596 |  96.72
         524 |  87.81
         509 | 100.80
         504 | 133.72

---------------------------------------- Question 7 Query ---------------------------------------- 

WITH t AS(SELECT c.name AS genre, SUM(p.amount) AS total_sales 
FROM category c 
JOIN film_category fc USING(category_id)
JOIN film f USING(film_id) 
JOIN inventory i USING(film_id) 
JOIN rental r USING(inventory_id) 
JOIN payment p USING(rental_id) 
GROUB BY 1 ORDER BY 2 DESC) 

SELECT t.genre, t.total_sales FROM t;

---------------------------------------- Question 7 Results ---------------------------------------- 					

   genre    | total_sales 
-------------+-------------
 Sports      |     5314.21
 Sci-Fi      |     4756.98
 Animation   |     4656.30
 Drama       |     4587.39
 Comedy      |     4383.58
 Action      |     4375.85
 New         |     4361.57
 Games       |     4281.33
 Foreign     |     4270.67
 Family      |     4226.07
 Documentary |     4217.52
 Horror      |     3722.54
 Children    |     3655.55
 Classics    |     3639.59
 Travel      |     3549.64
 Music       |     3417.72
(16 rows)

---------------------------------------- Question 8 Query ---------------------------------------- 

WITH id AS (SELECT customer_id AS id 
	FROM customer 
	WHERE first_name = 'JOHN' AND last_name='FARNSWORTH' 
	GROUB BY 1)

SELECT COUNT(*) 
FROM id, rental 
WHERE rental.customer_id=id.id 
GROUP BY id.id;

---------------------------------------- Question 8 Results ---------------------------------------- 					
count 
-------
    31
(1 row)

---------------------------------------- Question 9 Query ---------------------------------------- 

SELECT COUNT(payment.payment_id) 
FROM payment 
INNER JOIN rental ON payment.rental_id = rental.rental_id 
WHERE payment_date<'2017-01-27';

---------------------------------------- Question 9 Results ---------------------------------------- 			

count 
-------
   328
(1 row)

---------------------------------------- Question 10 Query ---------------------------------------- 

CREATE TABLE short_films(film_id INTEGER NOT NULL, title VARCHAR(40) NOT NULL, length INTEGER NOT NULL, replacement_cost DECIMAL(9,2) NOT NULL, rating VARCHAR(5) NOT NULL);
	
	
---------------------------------------- Question 11 Query ---------------------------------------- 

INSERT INTO short_films(film_id, title, length, replacement_cost, rating) 
SELECT film_id, CAST(title AS VARCHAR(40)), length, CAST(replacement_cost AS DECIMAL(9,2)), CAST(rating AS VARCHAR(5)) FROM film 
WHERE length < 50;

---------------------------------------- Question 12 Query ---------------------------------------- 

DELETE FROM short_films 
WHERE replacement_cost > 19.99;

---------------------------------------- Question 13 Query ---------------------------------------- 

ALTER TABLE short_films 
ADD stars INTEGER NOT NULL CONSTRAINT stars_default DEFAULT 5;

---------------------------------------- Question 14 Query ---------------------------------------- 

ALTER TABLE short_films RENAME length TO length_min; 
ALTER TABLE short_films ADD length_sec INTEGER NOT NULL CONSTRAINT length_def DEFAULT 0;
UPDATE short_films SET length_sec=(length_min*60);

---------------------------------------- Question 15 Query ---------------------------------------- 

DROP TABLE short_films; 

